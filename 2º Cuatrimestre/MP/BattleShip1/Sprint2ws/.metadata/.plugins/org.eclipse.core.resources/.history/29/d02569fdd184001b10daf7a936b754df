/**
 * 
 */
package squares;

import board.Square;
import uo.mp2021.util.checks.ArgumentChecks;

/**
 * @author blanc
 *
 */
public class Ship implements Target {
	public static final int MIN_SIZE = 1;
	public static final int MAX_SIZE = 4;
	
	private int damage;
	private int size;

	public Ship(int shipSize) {
		this.size = shipSize;
	}

	@Override
	public int shootAt() {
		return this.damage;
	}

	@Override
	public boolean hasImpact() {
		return this.ship.hasImpact();
	}

	public int size() {
		return this.ship.size();
	}

	public boolean isSunk() {
		return this.ship.toChar().equals('#');
	}

	@Override
	public char toChar() {
		switch (ship.size()) {
		case 1:
			return 'S';
		case 2:
			return 'D';
		case 3:
			return 'C';
		default:
			return 'B';
		}
	}

	@Override
	public char toFiredChar() {
		if (this.ship.isSunk()) {
			return '#';
		} else {
			return '*';
		}
	}

	/**
	 * @param the size
	 */
	public void setSize(int size) {
		ArgumentChecks.isTrue(size >= 1);
		ArgumentChecks.isTrue(size <= 4);
		this.size = size;
	}

}
