<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>1</version>
  <attributes>
    <entry>
      <string>isGeneric</string>
      <boolean>true</boolean>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>shift-fixed-left-inc.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>if (isPresent(args)) {
    export shift := 1&lt;&lt;(args.shiftBits-1);
    setCircuit(args.circuit);
} else {
    // used if circuit is started as the main circuit
    export dataBits:=16;
    export shift:=8;
}</string>
        </entry>
      </elementAttributes>
      <pos x="320" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>D</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>bin</intFormat>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits=int(args.dataBits);</string>
        </entry>
      </elementAttributes>
      <pos x="540" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>D_in</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>bin</intFormat>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits=int(args.dataBits);</string>
        </entry>
      </elementAttributes>
      <pos x="180" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>sh</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.Bits=int(args.shiftBits);</string>
        </entry>
      </elementAttributes>
      <pos x="180" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>shift-inc.dig</elementName>
      <elementAttributes>
        <entry>
          <string>generic</string>
          <string>if (isPresent(args)) {
    if (args.shiftBits=2) {
       export shift := 1;
       setCircuit(args.circuit);
    } else {
        export shiftBits := args.shiftBits-1;
    }
} else {
    // used if circuit is started as the main circuit
    export dataBits:=16;
    export shiftBits:=3;
    export circuit:=&quot;shift-fixed-left-inc.dig&quot;;
}</string>
        </entry>
      </elementAttributes>
      <pos x="460" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>4</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>3-3,0-2</string>
        </entry>
        <entry>
          <string>generic</string>
          <string>this.&apos;Input Splitting&apos; = &quot;&quot;+args.shiftBits;
this.&apos;Output Splitting&apos; = (args.shiftBits-1)+&quot;-&quot;+(args.shiftBits-1)+&quot;,0-&quot;+(args.shiftBits-2);</string>
        </entry>
      </elementAttributes>
      <pos x="220" y="140"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="440" y="160"/>
      <p2 x="460" y="160"/>
    </wire>
    <wire>
      <p1 x="240" y="160"/>
      <p2 x="260" y="160"/>
    </wire>
    <wire>
      <p1 x="180" y="100"/>
      <p2 x="320" y="100"/>
    </wire>
    <wire>
      <p1 x="260" y="180"/>
      <p2 x="440" y="180"/>
    </wire>
    <wire>
      <p1 x="380" y="120"/>
      <p2 x="460" y="120"/>
    </wire>
    <wire>
      <p1 x="240" y="140"/>
      <p2 x="320" y="140"/>
    </wire>
    <wire>
      <p1 x="520" y="140"/>
      <p2 x="540" y="140"/>
    </wire>
    <wire>
      <p1 x="180" y="140"/>
      <p2 x="220" y="140"/>
    </wire>
    <wire>
      <p1 x="260" y="160"/>
      <p2 x="260" y="180"/>
    </wire>
    <wire>
      <p1 x="440" y="160"/>
      <p2 x="440" y="180"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>